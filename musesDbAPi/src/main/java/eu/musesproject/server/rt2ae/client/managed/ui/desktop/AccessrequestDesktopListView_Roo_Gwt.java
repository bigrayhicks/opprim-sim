// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package eu.musesproject.server.rt2ae.client.managed.ui.desktop;
import com.google.gwt.core.client.GWT;
import com.google.gwt.i18n.client.DateTimeFormat;
import com.google.gwt.i18n.client.NumberFormat;
import com.google.gwt.text.client.DateTimeFormatRenderer;
import com.google.gwt.text.shared.AbstractRenderer;
import com.google.gwt.text.shared.Renderer;
import com.google.gwt.uibinder.client.UiBinder;
import com.google.gwt.uibinder.client.UiField;
import com.google.gwt.user.cellview.client.CellTable;
import com.google.gwt.user.cellview.client.HasKeyboardSelectionPolicy.KeyboardSelectionPolicy;
import com.google.gwt.user.cellview.client.TextColumn;
import com.google.gwt.user.client.ui.Button;
import com.google.gwt.user.client.ui.HTMLPanel;
import eu.musesproject.server.rt2ae.client.managed.ui.editor.AssetSetEditor;
import eu.musesproject.server.rt2ae.client.managed.ui.editor.RiskinformationSetEditor;
import eu.musesproject.server.rt2ae.client.proxy.AccessrequestProxy;
import eu.musesproject.server.rt2ae.client.proxy.AssetProxy;
import eu.musesproject.server.rt2ae.client.proxy.DeviceProxy;
import eu.musesproject.server.rt2ae.client.proxy.OpportunityProxy;
import eu.musesproject.server.rt2ae.client.proxy.RiskcommunicationProxy;
import eu.musesproject.server.rt2ae.client.proxy.RiskinformationProxy;
import eu.musesproject.server.rt2ae.client.proxy.ThreatProxy;
import eu.musesproject.server.rt2ae.client.proxy.UserActionProxy;
import eu.musesproject.server.rt2ae.client.proxy.UserProxy;
import eu.musesproject.server.rt2ae.client.scaffold.place.AbstractProxyListView;
import java.util.HashSet;
import java.util.Set;

public abstract class AccessrequestDesktopListView_Roo_Gwt extends AbstractProxyListView<AccessrequestProxy> {

    @UiField
    CellTable<AccessrequestProxy> table;

    protected Set<String> paths = new HashSet<String>();

    public void init() {
        paths.add("accessrequestId");
        table.addColumn(new TextColumn<AccessrequestProxy>() {

            Renderer<java.lang.Integer> renderer = new AbstractRenderer<java.lang.Integer>() {

                public String render(java.lang.Integer obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(AccessrequestProxy object) {
                return renderer.render(object.getAccessrequestId());
            }
        }, "Accessrequest Id");
        paths.add("assets");
        table.addColumn(new TextColumn<AccessrequestProxy>() {

            Renderer<java.util.Set> renderer = eu.musesproject.server.rt2ae.client.scaffold.place.CollectionRenderer.of(eu.musesproject.server.rt2ae.client.managed.ui.renderer.AssetProxyRenderer.instance());

            @Override
            public String getValue(AccessrequestProxy object) {
                return renderer.render(object.getAssets());
            }
        }, "Assets");
        paths.add("riskinformations");
        table.addColumn(new TextColumn<AccessrequestProxy>() {

            Renderer<java.util.Set> renderer = eu.musesproject.server.rt2ae.client.scaffold.place.CollectionRenderer.of(eu.musesproject.server.rt2ae.client.managed.ui.renderer.RiskinformationProxyRenderer.instance());

            @Override
            public String getValue(AccessrequestProxy object) {
                return renderer.render(object.getRiskinformations());
            }
        }, "Riskinformations");
        paths.add("opportunityId");
        table.addColumn(new TextColumn<AccessrequestProxy>() {

            Renderer<eu.musesproject.server.rt2ae.client.proxy.OpportunityProxy> renderer = eu.musesproject.server.rt2ae.client.managed.ui.renderer.OpportunityProxyRenderer.instance();

            @Override
            public String getValue(AccessrequestProxy object) {
                return renderer.render(object.getOpportunityId());
            }
        }, "Opportunity Id");
        paths.add("deviceId");
        table.addColumn(new TextColumn<AccessrequestProxy>() {

            Renderer<eu.musesproject.server.rt2ae.client.proxy.DeviceProxy> renderer = eu.musesproject.server.rt2ae.client.managed.ui.renderer.DeviceProxyRenderer.instance();

            @Override
            public String getValue(AccessrequestProxy object) {
                return renderer.render(object.getDeviceId());
            }
        }, "Device Id");
        paths.add("userId");
        table.addColumn(new TextColumn<AccessrequestProxy>() {

            Renderer<eu.musesproject.server.rt2ae.client.proxy.UserProxy> renderer = eu.musesproject.server.rt2ae.client.managed.ui.renderer.UserProxyRenderer.instance();

            @Override
            public String getValue(AccessrequestProxy object) {
                return renderer.render(object.getUserId());
            }
        }, "User Id");
        paths.add("riskcommunicationid");
        table.addColumn(new TextColumn<AccessrequestProxy>() {

            Renderer<eu.musesproject.server.rt2ae.client.proxy.RiskcommunicationProxy> renderer = eu.musesproject.server.rt2ae.client.managed.ui.renderer.RiskcommunicationProxyRenderer.instance();

            @Override
            public String getValue(AccessrequestProxy object) {
                return renderer.render(object.getRiskcommunicationid());
            }
        }, "Riskcommunicationid");
        paths.add("threatid");
        table.addColumn(new TextColumn<AccessrequestProxy>() {

            Renderer<eu.musesproject.server.rt2ae.client.proxy.ThreatProxy> renderer = eu.musesproject.server.rt2ae.client.managed.ui.renderer.ThreatProxyRenderer.instance();

            @Override
            public String getValue(AccessrequestProxy object) {
                return renderer.render(object.getThreatid());
            }
        }, "Threatid");
        paths.add("useractionId");
        table.addColumn(new TextColumn<AccessrequestProxy>() {

            Renderer<eu.musesproject.server.rt2ae.client.proxy.UserActionProxy> renderer = eu.musesproject.server.rt2ae.client.managed.ui.renderer.UserActionProxyRenderer.instance();

            @Override
            public String getValue(AccessrequestProxy object) {
                return renderer.render(object.getUseractionId());
            }
        }, "Useraction Id");
        paths.add("solved");
        table.addColumn(new TextColumn<AccessrequestProxy>() {

            Renderer<java.lang.Short> renderer = new AbstractRenderer<java.lang.Short>() {

                public String render(java.lang.Short obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(AccessrequestProxy object) {
                return renderer.render(object.getSolved());
            }
        }, "Solved");
        paths.add("riskcommunicationId");
        table.addColumn(new TextColumn<AccessrequestProxy>() {

            Renderer<java.lang.Integer> renderer = new AbstractRenderer<java.lang.Integer>() {

                public String render(java.lang.Integer obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(AccessrequestProxy object) {
                return renderer.render(object.getRiskcommunicationId());
            }
        }, "Riskcommunication Id");
    }
}
