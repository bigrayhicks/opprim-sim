// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package eu.musesproject.server.rt2ae.client.managed.activity;
import com.google.gwt.activity.shared.Activity;
import com.google.gwt.place.shared.PlaceController;
import com.google.web.bindery.requestfactory.shared.EntityProxyId;
import com.google.web.bindery.requestfactory.shared.RequestContext;
import eu.musesproject.server.rt2ae.client.managed.request.ApplicationRequestFactory;
import eu.musesproject.server.rt2ae.client.managed.ui.desktop.AssetDesktopDetailsView;
import eu.musesproject.server.rt2ae.client.managed.ui.desktop.AssetDesktopEditView;
import eu.musesproject.server.rt2ae.client.managed.ui.desktop.AssetDesktopListView;
import eu.musesproject.server.rt2ae.client.managed.ui.editor.AccessrequestSetEditor;
import eu.musesproject.server.rt2ae.client.managed.ui.editor.RiskinformationSetEditor;
import eu.musesproject.server.rt2ae.client.managed.ui.editor.SecurityIncidentSetEditor;
import eu.musesproject.server.rt2ae.client.managed.ui.mobile.AssetMobileDetailsView;
import eu.musesproject.server.rt2ae.client.managed.ui.mobile.AssetMobileEditView;
import eu.musesproject.server.rt2ae.client.proxy.AccessrequestProxy;
import eu.musesproject.server.rt2ae.client.proxy.AssetProxy;
import eu.musesproject.server.rt2ae.client.proxy.OpportunityProxy;
import eu.musesproject.server.rt2ae.client.proxy.RiskinformationProxy;
import eu.musesproject.server.rt2ae.client.proxy.SecurityIncidentProxy;
import eu.musesproject.server.rt2ae.client.request.AssetRequest;
import eu.musesproject.server.rt2ae.client.scaffold.ScaffoldApp;
import eu.musesproject.server.rt2ae.client.scaffold.place.ProxyPlace;
import java.util.Set;

public abstract class AssetActivitiesMapper_Roo_Gwt {

    protected ApplicationRequestFactory factory;

    protected PlaceController placeController;

    protected Activity makeCreateActivity() {
        AssetDesktopEditView.instance().setCreating(true);
        Activity activity = new AssetEditActivity(null, factory, ScaffoldApp.isMobile() ? AssetMobileEditView.instance() : AssetDesktopEditView.instance(), placeController);
        return new AssetEditActivityWrapper(factory, ScaffoldApp.isMobile() ? AssetMobileEditView.instance() : AssetDesktopEditView.instance(), activity, null);
    }

    @SuppressWarnings("unchecked")
    protected EntityProxyId<AssetProxy> coerceId(ProxyPlace place) {
        return (EntityProxyId<AssetProxy>) place.getProxyId();
    }

    protected Activity makeEditActivity(ProxyPlace place) {
        AssetDesktopEditView.instance().setCreating(false);
        EntityProxyId<AssetProxy> proxyId = coerceId(place);
        Activity activity = new AssetEditActivity(proxyId, factory, ScaffoldApp.isMobile() ? AssetMobileEditView.instance() : AssetDesktopEditView.instance(), placeController);
        return new AssetEditActivityWrapper(factory, ScaffoldApp.isMobile() ? AssetMobileEditView.instance() : AssetDesktopEditView.instance(), activity, proxyId);
    }
}
