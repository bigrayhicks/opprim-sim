// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package eu.musesproject.server.rt2ae.client.managed.activity;
import com.google.gwt.activity.shared.Activity;
import com.google.gwt.event.shared.EventBus;
import com.google.gwt.place.shared.Place;
import com.google.gwt.user.client.ui.AcceptsOneWidget;
import com.google.web.bindery.requestfactory.shared.EntityProxyId;
import com.google.web.bindery.requestfactory.shared.Receiver;
import eu.musesproject.server.rt2ae.client.managed.activity.AssetEditActivityWrapper.View;
import eu.musesproject.server.rt2ae.client.managed.request.ApplicationRequestFactory;
import eu.musesproject.server.rt2ae.client.managed.ui.AssetEditView;
import eu.musesproject.server.rt2ae.client.managed.ui.editor.AccessrequestSetEditor;
import eu.musesproject.server.rt2ae.client.managed.ui.editor.RiskinformationSetEditor;
import eu.musesproject.server.rt2ae.client.managed.ui.editor.SecurityIncidentSetEditor;
import eu.musesproject.server.rt2ae.client.proxy.AccessrequestProxy;
import eu.musesproject.server.rt2ae.client.proxy.AssetProxy;
import eu.musesproject.server.rt2ae.client.proxy.OpportunityProxy;
import eu.musesproject.server.rt2ae.client.proxy.RiskinformationProxy;
import eu.musesproject.server.rt2ae.client.proxy.SecurityIncidentProxy;
import eu.musesproject.server.rt2ae.client.scaffold.activity.IsScaffoldMobileActivity;
import eu.musesproject.server.rt2ae.client.scaffold.place.ProxyEditView;
import eu.musesproject.server.rt2ae.client.scaffold.place.ProxyListPlace;
import eu.musesproject.server.rt2ae.client.scaffold.place.ProxyPlace;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import java.util.Set;

public abstract class AssetEditActivityWrapper_Roo_Gwt implements Activity, IsScaffoldMobileActivity {

    protected Activity wrapped;

    protected View<?> view;

    protected ApplicationRequestFactory requests;

    @Override
    public void start(AcceptsOneWidget display, EventBus eventBus) {
        view.setAccessrequestsPickerValues(Collections.<AccessrequestProxy>emptyList());
        requests.accessrequestRequest().findAccessrequestEntries(0, 50).with(eu.musesproject.server.rt2ae.client.managed.ui.renderer.AccessrequestProxyRenderer.instance().getPaths()).fire(new Receiver<List<AccessrequestProxy>>() {

            public void onSuccess(List<AccessrequestProxy> response) {
                List<AccessrequestProxy> values = new ArrayList<AccessrequestProxy>();
                values.add(null);
                values.addAll(response);
                view.setAccessrequestsPickerValues(values);
            }
        });
        view.setRiskinformationsPickerValues(Collections.<RiskinformationProxy>emptyList());
        requests.riskinformationRequest().findRiskinformationEntries(0, 50).with(eu.musesproject.server.rt2ae.client.managed.ui.renderer.RiskinformationProxyRenderer.instance().getPaths()).fire(new Receiver<List<RiskinformationProxy>>() {

            public void onSuccess(List<RiskinformationProxy> response) {
                List<RiskinformationProxy> values = new ArrayList<RiskinformationProxy>();
                values.add(null);
                values.addAll(response);
                view.setRiskinformationsPickerValues(values);
            }
        });
        view.setSecurityIncidentsPickerValues(Collections.<SecurityIncidentProxy>emptyList());
        requests.securityIncidentRequest().findSecurityIncidentEntries(0, 50).with(eu.musesproject.server.rt2ae.client.managed.ui.renderer.SecurityIncidentProxyRenderer.instance().getPaths()).fire(new Receiver<List<SecurityIncidentProxy>>() {

            public void onSuccess(List<SecurityIncidentProxy> response) {
                List<SecurityIncidentProxy> values = new ArrayList<SecurityIncidentProxy>();
                values.add(null);
                values.addAll(response);
                view.setSecurityIncidentsPickerValues(values);
            }
        });
        view.setOpportunityidPickerValues(Collections.<OpportunityProxy>emptyList());
        requests.opportunityRequest().findOpportunityEntries(0, 50).with(eu.musesproject.server.rt2ae.client.managed.ui.renderer.OpportunityProxyRenderer.instance().getPaths()).fire(new Receiver<List<OpportunityProxy>>() {

            public void onSuccess(List<OpportunityProxy> response) {
                List<OpportunityProxy> values = new ArrayList<OpportunityProxy>();
                values.add(null);
                values.addAll(response);
                view.setOpportunityidPickerValues(values);
            }
        });
        wrapped.start(display, eventBus);
    }

    public interface View_Roo_Gwt<V extends eu.musesproject.server.rt2ae.client.managed.ui.AssetEditView<V>> extends AssetEditView<V> {

        void setAccessrequestsPickerValues(Collection<AccessrequestProxy> values);

        void setRiskinformationsPickerValues(Collection<RiskinformationProxy> values);

        void setSecurityIncidentsPickerValues(Collection<SecurityIncidentProxy> values);

        void setOpportunityidPickerValues(Collection<OpportunityProxy> values);
    }
}
