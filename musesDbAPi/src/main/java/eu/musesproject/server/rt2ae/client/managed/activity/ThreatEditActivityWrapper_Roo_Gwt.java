// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package eu.musesproject.server.rt2ae.client.managed.activity;
import com.google.gwt.activity.shared.Activity;
import com.google.gwt.event.shared.EventBus;
import com.google.gwt.place.shared.Place;
import com.google.gwt.user.client.ui.AcceptsOneWidget;
import com.google.web.bindery.requestfactory.shared.EntityProxyId;
import com.google.web.bindery.requestfactory.shared.Receiver;
import eu.musesproject.server.rt2ae.client.managed.activity.ThreatEditActivityWrapper.View;
import eu.musesproject.server.rt2ae.client.managed.request.ApplicationRequestFactory;
import eu.musesproject.server.rt2ae.client.managed.ui.ThreatEditView;
import eu.musesproject.server.rt2ae.client.managed.ui.editor.AccessrequestSetEditor;
import eu.musesproject.server.rt2ae.client.managed.ui.editor.ClueSetEditor;
import eu.musesproject.server.rt2ae.client.managed.ui.editor.OutcomeSetEditor;
import eu.musesproject.server.rt2ae.client.proxy.AccessrequestProxy;
import eu.musesproject.server.rt2ae.client.proxy.ClueProxy;
import eu.musesproject.server.rt2ae.client.proxy.OutcomeProxy;
import eu.musesproject.server.rt2ae.client.proxy.ThreatProxy;
import eu.musesproject.server.rt2ae.client.scaffold.activity.IsScaffoldMobileActivity;
import eu.musesproject.server.rt2ae.client.scaffold.place.ProxyEditView;
import eu.musesproject.server.rt2ae.client.scaffold.place.ProxyListPlace;
import eu.musesproject.server.rt2ae.client.scaffold.place.ProxyPlace;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import java.util.Set;

public abstract class ThreatEditActivityWrapper_Roo_Gwt implements Activity, IsScaffoldMobileActivity {

    protected Activity wrapped;

    protected View<?> view;

    protected ApplicationRequestFactory requests;

    @Override
    public void start(AcceptsOneWidget display, EventBus eventBus) {
        view.setAccessrequestsPickerValues(Collections.<AccessrequestProxy>emptyList());
        requests.accessrequestRequest().findAccessrequestEntries(0, 50).with(eu.musesproject.server.rt2ae.client.managed.ui.renderer.AccessrequestProxyRenderer.instance().getPaths()).fire(new Receiver<List<AccessrequestProxy>>() {

            public void onSuccess(List<AccessrequestProxy> response) {
                List<AccessrequestProxy> values = new ArrayList<AccessrequestProxy>();
                values.add(null);
                values.addAll(response);
                view.setAccessrequestsPickerValues(values);
            }
        });
        view.setCluesPickerValues(Collections.<ClueProxy>emptyList());
        requests.clueRequest().findClueEntries(0, 50).with(eu.musesproject.server.rt2ae.client.managed.ui.renderer.ClueProxyRenderer.instance().getPaths()).fire(new Receiver<List<ClueProxy>>() {

            public void onSuccess(List<ClueProxy> response) {
                List<ClueProxy> values = new ArrayList<ClueProxy>();
                values.add(null);
                values.addAll(response);
                view.setCluesPickerValues(values);
            }
        });
        view.setOutcomesPickerValues(Collections.<OutcomeProxy>emptyList());
        requests.outcomeRequest().findOutcomeEntries(0, 50).with(eu.musesproject.server.rt2ae.client.managed.ui.renderer.OutcomeProxyRenderer.instance().getPaths()).fire(new Receiver<List<OutcomeProxy>>() {

            public void onSuccess(List<OutcomeProxy> response) {
                List<OutcomeProxy> values = new ArrayList<OutcomeProxy>();
                values.add(null);
                values.addAll(response);
                view.setOutcomesPickerValues(values);
            }
        });
        wrapped.start(display, eventBus);
    }

    public interface View_Roo_Gwt<V extends eu.musesproject.server.rt2ae.client.managed.ui.ThreatEditView<V>> extends ThreatEditView<V> {

        void setAccessrequestsPickerValues(Collection<AccessrequestProxy> values);

        void setCluesPickerValues(Collection<ClueProxy> values);

        void setOutcomesPickerValues(Collection<OutcomeProxy> values);
    }
}
