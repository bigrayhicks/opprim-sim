// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package eu.musesproject.server.rt2ae.client.managed.activity;
import com.google.gwt.activity.shared.Activity;
import com.google.gwt.place.shared.PlaceController;
import com.google.web.bindery.requestfactory.shared.EntityProxyId;
import com.google.web.bindery.requestfactory.shared.RequestContext;
import eu.musesproject.server.rt2ae.client.managed.request.ApplicationRequestFactory;
import eu.musesproject.server.rt2ae.client.managed.ui.desktop.RiskinformationDesktopDetailsView;
import eu.musesproject.server.rt2ae.client.managed.ui.desktop.RiskinformationDesktopEditView;
import eu.musesproject.server.rt2ae.client.managed.ui.desktop.RiskinformationDesktopListView;
import eu.musesproject.server.rt2ae.client.managed.ui.mobile.RiskinformationMobileDetailsView;
import eu.musesproject.server.rt2ae.client.managed.ui.mobile.RiskinformationMobileEditView;
import eu.musesproject.server.rt2ae.client.proxy.AccessrequestProxy;
import eu.musesproject.server.rt2ae.client.proxy.AssetProxy;
import eu.musesproject.server.rt2ae.client.proxy.RiskinformationProxy;
import eu.musesproject.server.rt2ae.client.request.RiskinformationRequest;
import eu.musesproject.server.rt2ae.client.scaffold.ScaffoldApp;
import eu.musesproject.server.rt2ae.client.scaffold.place.ProxyPlace;

public abstract class RiskinformationActivitiesMapper_Roo_Gwt {

    protected ApplicationRequestFactory factory;

    protected PlaceController placeController;

    protected Activity makeCreateActivity() {
        RiskinformationDesktopEditView.instance().setCreating(true);
        Activity activity = new RiskinformationEditActivity(null, factory, ScaffoldApp.isMobile() ? RiskinformationMobileEditView.instance() : RiskinformationDesktopEditView.instance(), placeController);
        return new RiskinformationEditActivityWrapper(factory, ScaffoldApp.isMobile() ? RiskinformationMobileEditView.instance() : RiskinformationDesktopEditView.instance(), activity, null);
    }

    @SuppressWarnings("unchecked")
    protected EntityProxyId<RiskinformationProxy> coerceId(ProxyPlace place) {
        return (EntityProxyId<RiskinformationProxy>) place.getProxyId();
    }

    protected Activity makeEditActivity(ProxyPlace place) {
        RiskinformationDesktopEditView.instance().setCreating(false);
        EntityProxyId<RiskinformationProxy> proxyId = coerceId(place);
        Activity activity = new RiskinformationEditActivity(proxyId, factory, ScaffoldApp.isMobile() ? RiskinformationMobileEditView.instance() : RiskinformationDesktopEditView.instance(), placeController);
        return new RiskinformationEditActivityWrapper(factory, ScaffoldApp.isMobile() ? RiskinformationMobileEditView.instance() : RiskinformationDesktopEditView.instance(), activity, proxyId);
    }
}
